<?xml version="1.0" encoding="UTF-8"?>
<!-- Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置，当设置成trace时，
     你会看到log4j2内部各种详细输出。可以设置成OFF(关闭) 或 Error(只输出错误信息)。
     30s 刷新此配置
-->
<configuration status="WARN" monitorInterval="30">
    <!-- 日志文件目录、压缩文件目录、日志格式配置 -->
    <properties>
        <Property name="fileName">/home/logs/wechat-design/</Property>
        <Property name="fileGz">/home/logs/wechat-design/7z</Property>
        <Property name="LOG_PATTERN">%highlight{%d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %-5level %logger{1.}:%L - %msg%n}{%throwable{short.fileName}}{FATAL=white,ERROR=red,WARN=blue, INFO=black, DEBUG=green, TRACE=blue}</Property>
    </properties>

    <Appenders>

        <!-- 打印出所有的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档 -->
        <RollingRandomAccessFile name="infoFile" fileName="${fileName}/application_info.log" immediateFlush="false"
                                 filePattern="${fileGz}/$${date:yyyy-MM}/%d{yyyy-MM-dd}-%i.application_info.zip">
            <!--指定输出日志的内容格式-->
            <PatternLayout pattern="${LOG_PATTERN}"/>
            <Policies>
                <!--基于文件大小的滚动策略-->
                <SizeBasedTriggeringPolicy size="20 MB"/>
            </Policies>
            <Filters>
                <!-- 记录info和error debug级别信息 -->
                <ThresholdFilter level="error" onMatch="ACCEPT" onMismatch="DENY"/>
                <ThresholdFilter level="debug" onMatch="ACCEPT" onMismatch="DENY"/>
                <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>
            </Filters>
            <!-- 指定每天的最大压缩包个数，默认7个，超过了会覆盖之前的 -->
            <DefaultRolloverStrategy max="50"/>
        </RollingRandomAccessFile>

        <!-- 存储所有error信息 -->
        <RollingRandomAccessFile name="errorFile" fileName="${fileName}/application_error.log" immediateFlush="false"
                                 filePattern="${fileGz}/$${date:yyyy-MM}/%d{yyyy-MM-dd}-%i.application_error.zip">
            <PatternLayout pattern="${LOG_PATTERN}"/>
            <Policies>
                <!--基于时间的滚动策略 modulate="true"用来调整时间 单位小时-->
                <TimeBasedTriggeringPolicy modulate="true" interval="12"/>
            </Policies>
            <Filters>
                <!-- 只记录error级别信息 -->
                <ThresholdFilter level="error" onMatch="ACCEPT" onMismatch="DENY"/>
            </Filters>
        </RollingRandomAccessFile>

    </Appenders>

    <!-- Mixed sync/async -->
    <Loggers>
        <!--additivity="false" 代表不继承Root内的属性 子Logger只会在自己的appender里输出-->
        <logger name="com.hualala" level="debug" additivity="false">
            <AppenderRef ref="infoFile"/>
        </logger>
        <AsyncRoot level="info">
            <AppenderRef ref="infoFile"/>
            <AppenderRef ref="errorFile"/>
        </AsyncRoot>
    </Loggers>

</configuration>